StringBuffer
============
It is avaialble in java.lang package.
Methods of StringBuffer
========================
capacity() => the default capacity of StringBuffer is 16
if the capacity is filled internally jvm will increase the size using the following formulae
newCapacity= (currentcapcity + 1) * 2

eg:
      StringBuffer sb = new StringBuffer();
      System.out.println(sb.capacity());//16
      
      sb.append("abcdefghijklmnop");
      System.out.println(sb.capacity());//16
      
      sb.append("q");
      System.out.println(sb.capacity()); // (16+1) * 2
      
      sb.append("rstuvwxyz");
      System.out.println(sb.capacity());// 34
      
eg:
      StringBuffer sb = new StringBuffer(19);//here the integer no specifies the capacity of StringBuffer
      System.out.println(sb.capacity());
      
eg:
      StringBuffer sb = new StringBuffer("sachin");//here the capacity will be (length of String + 16)
      System.out.println(sb.capacity());
      System.out.println(sb.length());
      
eg:

      StringBuffer sb = new StringBuffer();
      System.out.println(sb.capacity());//16
      sb.append("The value of PIE IS :: ");
      sb.append(3.1414);
      sb.append(", This is exactly ::");
      sb.append(true);
      System.out.println(sb);
      System.out.println(sb.capacity());//70
      System.out.println(sb.length());//54
      
             insert(int,String)
             insert(int,int) => it inserts the String at the specified index
             insert(int,long)


eg:

      StringBuffer sb = new StringBuffer("abcdefgh");
      System.out.println(sb.capacity());// 8 + 16 => 24
      sb.insert(2, "xyz");
      System.out.println(sb);// abxyzcdefgh
      sb.insert(11, 9);
      System.out.println(sb); // abxyzcdefgh9
      delete(int,int)
      deleteCharAt(int)
    
eg://StringIndexOutOfBoundsException
      StringBuffer sb = new StringBuffer();
		sb.insert(2, "xyz");
		System.out.println(sb);
		
		sb.insert(11, "9");
		
		//
